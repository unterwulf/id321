<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<meta name="robots" content="index,nofollow">

<title>id3v2.4.0-structure - ID3.org</title>
<script type="text/javascript" src="/wiki/common/js/common.js"></script>

<script type="text/javascript">
<!--// common functions

// We keep here the state of the search box
searchIsDisabled = false;

function searchChange(e) {
    // Update search buttons status according to search box content.
    // Ignore empty or whitespace search term.
    var value = e.value.replace(/\s+/, '');
    if (value == '' || searchIsDisabled) { 
        searchSetDisabled(true);
    } else {
        searchSetDisabled(false);
    }
}

function searchSetDisabled(flag) {
    // Enable or disable search
    document.getElementById('fullsearch').disabled = flag;
    document.getElementById('titlesearch').disabled = flag;
}

function searchFocus(e) {
    // Update search input content on focus
    if (e.value == 'Search') {
        e.value = '';
        e.className = '';
        searchIsDisabled = false;
    }
}

function searchBlur(e) {
    // Update search input content on blur
    if (e.value == '') {
        e.value = 'Search';
        e.className = 'disabled';
        searchIsDisabled = true;
    }
}

function actionsMenuInit(title) {
    // Initialize action menu
    for (i = 0; i < document.forms.length; i++) {
        var form = document.forms[i];
        if (form.className == 'actionsmenu') {
            // Check if this form needs update
            var div = form.getElementsByTagName('div')[0];
            var label = div.getElementsByTagName('label')[0];
            if (label) {
                // This is the first time: remove label and do buton.
                div.removeChild(label);
                var dobutton = div.getElementsByTagName('input')[0];
                div.removeChild(dobutton);
                // and add menu title
                var select = div.getElementsByTagName('select')[0];
                var item = document.createElement('option');
                item.appendChild(document.createTextNode(title));
                item.value = 'show';
                select.insertBefore(item, select.options[0]);
                select.selectedIndex = 0;
            }
        }
    }
}
//-->
</script>


<link rel="stylesheet" type="text/css" charset="utf-8" media="all" href="/wiki/mentalwealth_id3/css/common.css">
<link rel="stylesheet" type="text/css" charset="utf-8" media="screen" href="/wiki/mentalwealth_id3/css/screen.css">
<link rel="stylesheet" type="text/css" charset="utf-8" media="print" href="/wiki/mentalwealth_id3/css/print.css">
<link rel="stylesheet" type="text/css" charset="utf-8" media="projection" href="/wiki/mentalwealth_id3/css/projection.css">
<link rel="alternate" title="ID3.org Recent Changes" href="/RecentChanges?action=rss_rc&amp;ddiffs=1&amp;unique=1" type="application/rss+xml">

<link rel="Start" href="/Home">
<link rel="Alternate" title="Wiki Markup" href="/id3v2.4.0-structure?action=raw">
<link rel="Alternate" media="print" title="Print View" href="/id3v2.4.0-structure?action=print">
<link rel="Search" href="/FindPage">
<link rel="Index" href="/TitleIndex">
<link rel="Glossary" href="/WordIndex">
<link rel="Help" href="/HelpOnFormatting">
</head>

<body  lang="en" dir="ltr">
<center><script type="text/javascript"><!--
google_ad_client = "pub-1408728402565238";
google_ad_width = 728;
google_ad_height = 90;
google_ad_format = "728x90_as";
google_ad_type = "text";
google_ad_channel = "";
google_color_border = "ffffff";
google_color_bg = "FFFFFF";
google_color_link = "DD6600";
google_color_text = "000000";
google_color_url = "DD6600";
//--></script>
<script type="text/javascript"
  src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
  </script>
</center>
<div id="header"><div id="logo"><a href="/Home"><img src="http://www.id3.org/id3v2.gif" alt="ID3.org Logo">&nbsp;&nbsp;The Audience is informed</a></div></div>

<div id="sidebar">
<div class="sidepanel"><h1>Search</h1>
<form id="searchform" method="get" action="">
<div>
<input type="hidden" name="action" value="fullsearch">
<input type="hidden" name="context" value="180">
<label for="searchinput">Search:</label>
<input id="searchinput" type="text" name="value" value="" size="20"
    onfocus="searchFocus(this)" onblur="searchBlur(this)"
    onkeyup="searchChange(this)" onchange="searchChange(this)" alt="Search">
<br><input id="titlesearch" name="titlesearch" type="submit"
    value="Titles" alt="Search Titles">
<input id="fullsearch" name="fullsearch" type="submit"
    value="Text" alt="Search Full Text">
</div>
</form>
<script type="text/javascript">
<!--// Initialize search form
var f = document.getElementById('searchform');
f.getElementsByTagName('label')[0].style.display = 'none';
var e = document.getElementById('searchinput');
searchChange(e);
searchBlur(e);
//-->
</script>
</div>
<div class="sidepanel"><h1>Navigation</h1>
<ul id="navibar">
<li class="wikilink"><a href="/Home">Home</a></li><li class="wikilink"><a href="/Introduction">Introduction</a></li><li class="wikilink"><a href="/Developer_Information">Developer Information</a></li><li class="wikilink"><a href="/Implementations">Implementations</a></li><li class="wikilink"><a href="/Compliance_Issues">Compliance Issues</a></li><li class="wikilink"><a href="/Contributors">Contributors</a></li><li class="wikilink"><a href="/FAQ">FAQ</a></li><li class="wikilink"><a href="/MailingList">MailingList</a></li><li class="wikilink"><a href="/RecentChanges">RecentChanges</a></li><li class="wikilink"><a href="/FindPage">FindPage</a></li><li class="wikilink"><a href="/HelpContents">HelpContents</a></li><li class="current"><a href="/id3v2.4.0-structure">id3v2.4.0-structure</a></li>
</ul>
</div>
<div class="sidepanel"><h1>Recent</h1></div>
<div class="sidepanel"><h1>This Page</h1><ul class="editbar">
<li><a href="/id3v2.4.0-structure?action=diff">show changes</a></li>
<li><a href="/id3v2.4.0-structure?action=info">get info</a></li>
<li><a href="/id3v2.4.0-structure?action=raw">show raw text</a></li>
<li><a href="/id3v2.4.0-structure?action=print">show print view</a></li>
<li><a href="/id3v2.4.0-structure?action=refresh">delete cache</a></li>
<li><a href="/id3v2.4.0-structure?action=AttachFile">attach file</a></li>
<li><a href="/id3v2.4.0-structure?action=SpellCheck">check spelling</a></li>
<li><a href="/id3v2.4.0-structure?action=LikePages">show like pages</a></li>
<li><a href="/id3v2.4.0-structure?action=LocalSiteMap">show local site map</a></li>
</ul>
</div>
<div class="sidepanel"><h1>More Actions</h1><ul class="editbar">
<li><a href="/id3v2.4.0-structure?action=Despam">despam</a></li>
<li><a href="/id3v2.4.0-structure?action=SubscribeUser">subscribe user</a></li>
<li><a href="/id3v2.4.0-structure?action=RenderAsDocbook">render as docbook</a></li>
<li><a href="/id3v2.4.0-structure?action=PackagePages">package pages</a></li>
<li><a href="/id3v2.4.0-structure?action=MyPages">my pages</a></li>
</ul>
</div>
<div class="sidepanel"><h1>User</h1><ul id="username"><li><a href="/id3v2.4.0-structure?action=login" id="login">Login</a></li></ul></div>
<ul id="credits">
<li><a href="http://moinmoin.wikiwikiweb.de/">MoinMoin Powered</a></li><li><a href="http://www.python.org/">Python Powered</a></li><li><a href="http://validator.w3.org/check?uri=referer">Valid HTML 4.01</a></li>
</ul>

</div>

<div id="page" lang="en" dir="ltr">
<div dir="ltr" id="content" lang="en"><span class="anchor" id="top"></span>
<span class="anchor" id="line-2"></span><p class="line867"><span class="anchor" id="line-3"></span><pre>Informal standard                                             M. Nilsson
<span class="anchor" id="line-4"></span>Document: id3v2.4.0-structure.txt                      1st November 2000
<span class="anchor" id="line-5"></span>
<span class="anchor" id="line-6"></span>
<span class="anchor" id="line-7"></span>                 ID3 tag version 2.4.0 - Main Structure
<span class="anchor" id="line-8"></span>
<span class="anchor" id="line-9"></span>Status of this document
<span class="anchor" id="line-10"></span>
<span class="anchor" id="line-11"></span>   This document is an informal standard and replaces the ID3v2.3.0
<span class="anchor" id="line-12"></span>   standard [ID3v2]. A formal standard will use another revision number
<span class="anchor" id="line-13"></span>   even if the content is identical to document. The contents in this
<span class="anchor" id="line-14"></span>   document may change for clarifications but never for added or altered
<span class="anchor" id="line-15"></span>   functionallity.
<span class="anchor" id="line-16"></span>
<span class="anchor" id="line-17"></span>   Distribution of this document is unlimited.
<span class="anchor" id="line-18"></span>
<span class="anchor" id="line-19"></span>
<span class="anchor" id="line-20"></span>Abstract
<span class="anchor" id="line-21"></span>
<span class="anchor" id="line-22"></span>   This document describes the main structure of ID3v2.4.0, which is a
<span class="anchor" id="line-23"></span>   revised version of the ID3v2 informal standard [ID3v2] version
<span class="anchor" id="line-24"></span>   2.3.0. The ID3v2 offers a flexible way of storing audio meta
<span class="anchor" id="line-25"></span>   information within the audio file itself. The information may be
<span class="anchor" id="line-26"></span>   technical information, such as equalisation curves, as well as
<span class="anchor" id="line-27"></span>   title, performer, copyright etc.
<span class="anchor" id="line-28"></span>
<span class="anchor" id="line-29"></span>   ID3v2.4.0 is meant to be as close as possible to ID3v2.3.0 in order
<span class="anchor" id="line-30"></span>   to allow for implementations to be revised as easily as possible.
<span class="anchor" id="line-31"></span>
<span class="anchor" id="line-32"></span>
<span class="anchor" id="line-33"></span>1.   Table of contents
<span class="anchor" id="line-34"></span>
<span class="anchor" id="line-35"></span>        Status of this document
<span class="anchor" id="line-36"></span>        Abstract
<span class="anchor" id="line-37"></span>   1.   Table of contents
<span class="anchor" id="line-38"></span>   2.   Conventions in this document
<span class="anchor" id="line-39"></span>   2.   Standard overview
<span class="anchor" id="line-40"></span>   3.   ID3v2 overview
<span class="anchor" id="line-41"></span>     3.1.   ID3v2 header
<span class="anchor" id="line-42"></span>     3.2.   ID3v2 extended header
<span class="anchor" id="line-43"></span>     3.3.   Padding
<span class="anchor" id="line-44"></span>     3.4.   ID3v2 footer
<span class="anchor" id="line-45"></span>   4.   ID3v2 frames overview
<span class="anchor" id="line-46"></span>     4.1.   Frame header flags
<span class="anchor" id="line-47"></span>       4.1.1. Frame status flags
<span class="anchor" id="line-48"></span>       4.1.2. Frame format flags
<span class="anchor" id="line-49"></span>   5.   Tag location
<span class="anchor" id="line-50"></span>   6.   Unsynchronisation
<span class="anchor" id="line-51"></span>     6.1.   The unsynchronisation scheme
<span class="anchor" id="line-52"></span>     6.2.   Synchsafe integers
<span class="anchor" id="line-53"></span>   7.   Copyright
<span class="anchor" id="line-54"></span>   8.   References
<span class="anchor" id="line-55"></span>   9.   Author's Address
<span class="anchor" id="line-56"></span>
<span class="anchor" id="line-57"></span>
<span class="anchor" id="line-58"></span>2.   Conventions in this document
<span class="anchor" id="line-59"></span>
<span class="anchor" id="line-60"></span>   Text within "" is a text string exactly as it appears in a tag.
<span class="anchor" id="line-61"></span>   Numbers preceded with $ are hexadecimal and numbers preceded with %
<span class="anchor" id="line-62"></span>   are binary. $xx is used to indicate a byte with unknown content. %x
<span class="anchor" id="line-63"></span>   is used to indicate a bit with unknown content. The most significant
<span class="anchor" id="line-64"></span>   bit (MSB) of a byte is called 'bit 7' and the least significant bit
<span class="anchor" id="line-65"></span>   (LSB) is called 'bit 0'.
<span class="anchor" id="line-66"></span>
<span class="anchor" id="line-67"></span>   A tag is the whole tag described in this document. A frame is a block
<span class="anchor" id="line-68"></span>   of information in the tag. The tag consists of a header, frames and
<span class="anchor" id="line-69"></span>   optional padding. A field is a piece of information; one value, a
<span class="anchor" id="line-70"></span>   string etc. A numeric string is a string that consists of the
<span class="anchor" id="line-71"></span>   characters "0123456789" only.
<span class="anchor" id="line-72"></span>
<span class="anchor" id="line-73"></span>   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
<span class="anchor" id="line-74"></span>   "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and "OPTIONAL" in this
<span class="anchor" id="line-75"></span>   document are to be interpreted as described in RFC 2119 [KEYWORDS].
<span class="anchor" id="line-76"></span>
<span class="anchor" id="line-77"></span>
<span class="anchor" id="line-78"></span>3.   ID3v2 overview
<span class="anchor" id="line-79"></span>
<span class="anchor" id="line-80"></span>   ID3v2 is a general tagging format for audio, which makes it possible
<span class="anchor" id="line-81"></span>   to store meta data about the audio inside the audio file itself. The
<span class="anchor" id="line-82"></span>   ID3 tag described in this document is mainly targeted at files
<span class="anchor" id="line-83"></span>   encoded with MPEG-1/2 layer I, MPEG-1/2 layer II, MPEG-1/2 layer III
<span class="anchor" id="line-84"></span>   and MPEG-2.5, but may work with other types of encoded audio or as a
<span class="anchor" id="line-85"></span>   stand alone format for audio meta data.
<span class="anchor" id="line-86"></span>
<span class="anchor" id="line-87"></span>   ID3v2 is designed to be as flexible and expandable as possible to
<span class="anchor" id="line-88"></span>   meet new meta information needs that might arise. To achieve that
<span class="anchor" id="line-89"></span>   ID3v2 is constructed as a container for several information blocks,
<span class="anchor" id="line-90"></span>   called frames, whose format need not be known to the software that
<span class="anchor" id="line-91"></span>   encounters them. At the start of every frame is an unique and
<span class="anchor" id="line-92"></span>   predefined identifier, a size descriptor that allows software to skip
<span class="anchor" id="line-93"></span>   unknown frames and a flags field. The flags describes encoding
<span class="anchor" id="line-94"></span>   details and if the frame should remain in the tag, should it be
<span class="anchor" id="line-95"></span>   unknown to the software, if the file is altered.
<span class="anchor" id="line-96"></span>
<span class="anchor" id="line-97"></span>   The bitorder in ID3v2 is most significant bit first (MSB). The
<span class="anchor" id="line-98"></span>   byteorder in multibyte numbers is most significant byte first (e.g.
<span class="anchor" id="line-99"></span>   $12345678 would be encoded $12 34 56 78), also known as big endian
<span class="anchor" id="line-100"></span>   and network byte order.
<span class="anchor" id="line-101"></span>
<span class="anchor" id="line-102"></span>   Overall tag structure:
<span class="anchor" id="line-103"></span>
<span class="anchor" id="line-104"></span>     +-----------------------------+
<span class="anchor" id="line-105"></span>     |      Header (10 bytes)      |
<span class="anchor" id="line-106"></span>     +-----------------------------+
<span class="anchor" id="line-107"></span>     |       Extended Header       |
<span class="anchor" id="line-108"></span>     | (variable length, OPTIONAL) |
<span class="anchor" id="line-109"></span>     +-----------------------------+
<span class="anchor" id="line-110"></span>     |   Frames (variable length)  |
<span class="anchor" id="line-111"></span>     +-----------------------------+
<span class="anchor" id="line-112"></span>     |           Padding           |
<span class="anchor" id="line-113"></span>     | (variable length, OPTIONAL) |
<span class="anchor" id="line-114"></span>     +-----------------------------+
<span class="anchor" id="line-115"></span>     | Footer (10 bytes, OPTIONAL) |
<span class="anchor" id="line-116"></span>     +-----------------------------+
<span class="anchor" id="line-117"></span>
<span class="anchor" id="line-118"></span>   In general, padding and footer are mutually exclusive. See details in
<span class="anchor" id="line-119"></span>   sections 3.3, 3.4 and 5.
<span class="anchor" id="line-120"></span>
<span class="anchor" id="line-121"></span>
<span class="anchor" id="line-122"></span>3.1.   ID3v2 header
<span class="anchor" id="line-123"></span>
<span class="anchor" id="line-124"></span>   The first part of the ID3v2 tag is the 10 byte tag header, laid out
<span class="anchor" id="line-125"></span>   as follows:
<span class="anchor" id="line-126"></span>
<span class="anchor" id="line-127"></span>     ID3v2/file identifier      "ID3"
<span class="anchor" id="line-128"></span>     ID3v2 version              $04 00
<span class="anchor" id="line-129"></span>     ID3v2 flags                %abcd0000
<span class="anchor" id="line-130"></span>     ID3v2 size             4 * %0xxxxxxx
<span class="anchor" id="line-131"></span>
<span class="anchor" id="line-132"></span>   The first three bytes of the tag are always "ID3", to indicate that
<span class="anchor" id="line-133"></span>   this is an ID3v2 tag, directly followed by the two version bytes. The
<span class="anchor" id="line-134"></span>   first byte of ID3v2 version is its major version, while the second
<span class="anchor" id="line-135"></span>   byte is its revision number. In this case this is ID3v2.4.0. All
<span class="anchor" id="line-136"></span>   revisions are backwards compatible while major versions are not. If
<span class="anchor" id="line-137"></span>   software with ID3v2.4.0 and below support should encounter version
<span class="anchor" id="line-138"></span>   five or higher it should simply ignore the whole tag. Version or
<span class="anchor" id="line-139"></span>   revision will never be $FF.
<span class="anchor" id="line-140"></span>
<span class="anchor" id="line-141"></span>   The version is followed by the ID3v2 flags field, of which currently
<span class="anchor" id="line-142"></span>   four flags are used.
<span class="anchor" id="line-143"></span>
<span class="anchor" id="line-144"></span>
<span class="anchor" id="line-145"></span>   a - Unsynchronisation
<span class="anchor" id="line-146"></span>
<span class="anchor" id="line-147"></span>     Bit 7 in the 'ID3v2 flags' indicates whether or not
<span class="anchor" id="line-148"></span>     unsynchronisation is applied on all frames (see section 6.1 for
<span class="anchor" id="line-149"></span>     details); a set bit indicates usage.
<span class="anchor" id="line-150"></span>
<span class="anchor" id="line-151"></span>
<span class="anchor" id="line-152"></span>   b - Extended header
<span class="anchor" id="line-153"></span>
<span class="anchor" id="line-154"></span>     The second bit (bit 6) indicates whether or not the header is
<span class="anchor" id="line-155"></span>     followed by an extended header. The extended header is described in
<span class="anchor" id="line-156"></span>     section 3.2. A set bit indicates the presence of an extended
<span class="anchor" id="line-157"></span>     header.
<span class="anchor" id="line-158"></span>
<span class="anchor" id="line-159"></span>
<span class="anchor" id="line-160"></span>   c - Experimental indicator
<span class="anchor" id="line-161"></span>
<span class="anchor" id="line-162"></span>     The third bit (bit 5) is used as an 'experimental indicator'. This
<span class="anchor" id="line-163"></span>     flag SHALL always be set when the tag is in an experimental stage.
<span class="anchor" id="line-164"></span>
<span class="anchor" id="line-165"></span>
<span class="anchor" id="line-166"></span>   d - Footer present
<span class="anchor" id="line-167"></span>
<span class="anchor" id="line-168"></span>     Bit 4 indicates that a footer (section 3.4) is present at the very
<span class="anchor" id="line-169"></span>     end of the tag. A set bit indicates the presence of a footer.
<span class="anchor" id="line-170"></span>
<span class="anchor" id="line-171"></span>
<span class="anchor" id="line-172"></span>   All the other flags MUST be cleared. If one of these undefined flags
<span class="anchor" id="line-173"></span>   are set, the tag might not be readable for a parser that does not
<span class="anchor" id="line-174"></span>   know the flags function.
<span class="anchor" id="line-175"></span>
<span class="anchor" id="line-176"></span>   The ID3v2 tag size is stored as a 32 bit synchsafe integer (section
<span class="anchor" id="line-177"></span>   6.2), making a total of 28 effective bits (representing up to 256MB).
<span class="anchor" id="line-178"></span>
<span class="anchor" id="line-179"></span>   The ID3v2 tag size is the sum of the byte length of the extended
<span class="anchor" id="line-180"></span>   header, the padding and the frames after unsynchronisation. If a
<span class="anchor" id="line-181"></span>   footer is present this equals to ('total size' - 20) bytes, otherwise
<span class="anchor" id="line-182"></span>   ('total size' - 10) bytes.
<span class="anchor" id="line-183"></span>
<span class="anchor" id="line-184"></span>   An ID3v2 tag can be detected with the following pattern:
<span class="anchor" id="line-185"></span>     $49 44 33 yy yy xx zz zz zz zz
<span class="anchor" id="line-186"></span>   Where yy is less than $FF, xx is the 'flags' byte and zz is less than
<span class="anchor" id="line-187"></span>   $80.
<span class="anchor" id="line-188"></span>
<span class="anchor" id="line-189"></span>
<span class="anchor" id="line-190"></span>3.2. Extended header
<span class="anchor" id="line-191"></span>
<span class="anchor" id="line-192"></span>   The extended header contains information that can provide further
<span class="anchor" id="line-193"></span>   insight in the structure of the tag, but is not vital to the correct
<span class="anchor" id="line-194"></span>   parsing of the tag information; hence the extended header is
<span class="anchor" id="line-195"></span>   optional.
<span class="anchor" id="line-196"></span>
<span class="anchor" id="line-197"></span>     Extended header size   4 * %0xxxxxxx
<span class="anchor" id="line-198"></span>     Number of flag bytes       $01
<span class="anchor" id="line-199"></span>     Extended Flags             $xx
<span class="anchor" id="line-200"></span>
<span class="anchor" id="line-201"></span>   Where the 'Extended header size' is the size of the whole extended
<span class="anchor" id="line-202"></span>   header, stored as a 32 bit synchsafe integer. An extended header can
<span class="anchor" id="line-203"></span>   thus never have a size of fewer than six bytes.
<span class="anchor" id="line-204"></span>
<span class="anchor" id="line-205"></span>   The extended flags field, with its size described by 'number of flag
<span class="anchor" id="line-206"></span>   bytes', is defined as:
<span class="anchor" id="line-207"></span>
<span class="anchor" id="line-208"></span>     %0bcd0000
<span class="anchor" id="line-209"></span>
<span class="anchor" id="line-210"></span>   Each flag that is set in the extended header has data attached, which
<span class="anchor" id="line-211"></span>   comes in the order in which the flags are encountered (i.e. the data
<span class="anchor" id="line-212"></span>   for flag 'b' comes before the data for flag 'c'). Unset flags cannot
<span class="anchor" id="line-213"></span>   have any attached data. All unknown flags MUST be unset and their
<span class="anchor" id="line-214"></span>   corresponding data removed when a tag is modified.
<span class="anchor" id="line-215"></span>
<span class="anchor" id="line-216"></span>   Every set flag's data starts with a length byte, which contains a
<span class="anchor" id="line-217"></span>   value between 0 and 128 ($00 - $7f), followed by data that has the
<span class="anchor" id="line-218"></span>   field length indicated by the length byte. If a flag has no attached
<span class="anchor" id="line-219"></span>   data, the value $00 is used as length byte.
<span class="anchor" id="line-220"></span>
<span class="anchor" id="line-221"></span>
<span class="anchor" id="line-222"></span>   b - Tag is an update
<span class="anchor" id="line-223"></span>
<span class="anchor" id="line-224"></span>     If this flag is set, the present tag is an update of a tag found
<span class="anchor" id="line-225"></span>     earlier in the present file or stream. If frames defined as unique
<span class="anchor" id="line-226"></span>     are found in the present tag, they are to override any
<span class="anchor" id="line-227"></span>     corresponding ones found in the earlier tag. This flag has no
<span class="anchor" id="line-228"></span>     corresponding data.
<span class="anchor" id="line-229"></span>
<span class="anchor" id="line-230"></span>         Flag data length      $00
<span class="anchor" id="line-231"></span>
<span class="anchor" id="line-232"></span>   c - CRC data present
<span class="anchor" id="line-233"></span>
<span class="anchor" id="line-234"></span>     If this flag is set, a CRC-32 [ISO-3309] data is included in the
<span class="anchor" id="line-235"></span>     extended header. The CRC is calculated on all the data between the
<span class="anchor" id="line-236"></span>     header and footer as indicated by the header's tag length field,
<span class="anchor" id="line-237"></span>     minus the extended header. Note that this includes the padding (if
<span class="anchor" id="line-238"></span>     there is any), but excludes the footer. The CRC-32 is stored as an
<span class="anchor" id="line-239"></span>     35 bit synchsafe integer, leaving the upper four bits always
<span class="anchor" id="line-240"></span>     zeroed.
<span class="anchor" id="line-241"></span>
<span class="anchor" id="line-242"></span>        Flag data length       $05
<span class="anchor" id="line-243"></span>        Total frame CRC    5 * %0xxxxxxx
<span class="anchor" id="line-244"></span>
<span class="anchor" id="line-245"></span>   d - Tag restrictions
<span class="anchor" id="line-246"></span>
<span class="anchor" id="line-247"></span>     For some applications it might be desired to restrict a tag in more
<span class="anchor" id="line-248"></span>     ways than imposed by the ID3v2 specification. Note that the
<span class="anchor" id="line-249"></span>     presence of these restrictions does not affect how the tag is
<span class="anchor" id="line-250"></span>     decoded, merely how it was restricted before encoding. If this flag
<span class="anchor" id="line-251"></span>     is set the tag is restricted as follows:
<span class="anchor" id="line-252"></span>
<span class="anchor" id="line-253"></span>        Flag data length       $01
<span class="anchor" id="line-254"></span>        Restrictions           %ppqrrstt
<span class="anchor" id="line-255"></span>
<span class="anchor" id="line-256"></span>     p - Tag size restrictions
<span class="anchor" id="line-257"></span>
<span class="anchor" id="line-258"></span>       00   No more than 128 frames and 1 MB total tag size.
<span class="anchor" id="line-259"></span>       01   No more than 64 frames and 128 KB total tag size.
<span class="anchor" id="line-260"></span>       10   No more than 32 frames and 40 KB total tag size.
<span class="anchor" id="line-261"></span>       11   No more than 32 frames and 4 KB total tag size.
<span class="anchor" id="line-262"></span>
<span class="anchor" id="line-263"></span>     q - Text encoding restrictions
<span class="anchor" id="line-264"></span>
<span class="anchor" id="line-265"></span>       0    No restrictions
<span class="anchor" id="line-266"></span>       1    Strings are only encoded with ISO-8859-1 [ISO-8859-1] or
<span class="anchor" id="line-267"></span>            UTF-8 [UTF-8].
<span class="anchor" id="line-268"></span>
<span class="anchor" id="line-269"></span>     r - Text fields size restrictions
<span class="anchor" id="line-270"></span>
<span class="anchor" id="line-271"></span>       00   No restrictions
<span class="anchor" id="line-272"></span>       01   No string is longer than 1024 characters.
<span class="anchor" id="line-273"></span>       10   No string is longer than 128 characters.
<span class="anchor" id="line-274"></span>       11   No string is longer than 30 characters.
<span class="anchor" id="line-275"></span>
<span class="anchor" id="line-276"></span>       Note that nothing is said about how many bytes is used to
<span class="anchor" id="line-277"></span>       represent those characters, since it is encoding dependent. If a
<span class="anchor" id="line-278"></span>       text frame consists of more than one string, the sum of the
<span class="anchor" id="line-279"></span>       strungs is restricted as stated.
<span class="anchor" id="line-280"></span>
<span class="anchor" id="line-281"></span>     s - Image encoding restrictions
<span class="anchor" id="line-282"></span>
<span class="anchor" id="line-283"></span>       0   No restrictions
<span class="anchor" id="line-284"></span>       1   Images are encoded only with PNG [PNG] or JPEG [JFIF].
<span class="anchor" id="line-285"></span>
<span class="anchor" id="line-286"></span>     t - Image size restrictions
<span class="anchor" id="line-287"></span>
<span class="anchor" id="line-288"></span>       00  No restrictions
<span class="anchor" id="line-289"></span>       01  All images are 256x256 pixels or smaller.
<span class="anchor" id="line-290"></span>       10  All images are 64x64 pixels or smaller.
<span class="anchor" id="line-291"></span>       11  All images are exactly 64x64 pixels, unless required
<span class="anchor" id="line-292"></span>           otherwise.
<span class="anchor" id="line-293"></span>
<span class="anchor" id="line-294"></span>
<span class="anchor" id="line-295"></span>3.3.   Padding
<span class="anchor" id="line-296"></span>
<span class="anchor" id="line-297"></span>   It is OPTIONAL to include padding after the final frame (at the end
<span class="anchor" id="line-298"></span>   of the ID3 tag), making the size of all the frames together smaller
<span class="anchor" id="line-299"></span>   than the size given in the tag header. A possible purpose of this
<span class="anchor" id="line-300"></span>   padding is to allow for adding a few additional frames or enlarge
<span class="anchor" id="line-301"></span>   existing frames within the tag without having to rewrite the entire
<span class="anchor" id="line-302"></span>   file. The value of the padding bytes must be $00. A tag MUST NOT have
<span class="anchor" id="line-303"></span>   any padding between the frames or between the tag header and the
<span class="anchor" id="line-304"></span>   frames. Furthermore it MUST NOT have any padding when a tag footer is
<span class="anchor" id="line-305"></span>   added to the tag.
<span class="anchor" id="line-306"></span>
<span class="anchor" id="line-307"></span>
<span class="anchor" id="line-308"></span>3.4.   ID3v2 footer
<span class="anchor" id="line-309"></span>
<span class="anchor" id="line-310"></span>   To speed up the process of locating an ID3v2 tag when searching from
<span class="anchor" id="line-311"></span>   the end of a file, a footer can be added to the tag. It is REQUIRED
<span class="anchor" id="line-312"></span>   to add a footer to an appended tag, i.e. a tag located after all
<span class="anchor" id="line-313"></span>   audio data. The footer is a copy of the header, but with a different
<span class="anchor" id="line-314"></span>   identifier.
<span class="anchor" id="line-315"></span>
<span class="anchor" id="line-316"></span>     ID3v2 identifier           "3DI"
<span class="anchor" id="line-317"></span>     ID3v2 version              $04 00
<span class="anchor" id="line-318"></span>     ID3v2 flags                %abcd0000
<span class="anchor" id="line-319"></span>     ID3v2 size             4 * %0xxxxxxx
<span class="anchor" id="line-320"></span>
<span class="anchor" id="line-321"></span>
<span class="anchor" id="line-322"></span>4.   ID3v2 frame overview
<span class="anchor" id="line-323"></span>
<span class="anchor" id="line-324"></span>   All ID3v2 frames consists of one frame header followed by one or more
<span class="anchor" id="line-325"></span>   fields containing the actual information. The header is always 10
<span class="anchor" id="line-326"></span>   bytes and laid out as follows:
<span class="anchor" id="line-327"></span>
<span class="anchor" id="line-328"></span>     Frame ID      $xx xx xx xx  (four characters)
<span class="anchor" id="line-329"></span>     Size      4 * %0xxxxxxx
<span class="anchor" id="line-330"></span>     Flags         $xx xx
<span class="anchor" id="line-331"></span>
<span class="anchor" id="line-332"></span>   The frame ID is made out of the characters capital A-Z and 0-9.
<span class="anchor" id="line-333"></span>   Identifiers beginning with "X", "Y" and "Z" are for experimental
<span class="anchor" id="line-334"></span>   frames and free for everyone to use, without the need to set the
<span class="anchor" id="line-335"></span>   experimental bit in the tag header. Bear in mind that someone else
<span class="anchor" id="line-336"></span>   might have used the same identifier as you. All other identifiers are
<span class="anchor" id="line-337"></span>   either used or reserved for future use.
<span class="anchor" id="line-338"></span>
<span class="anchor" id="line-339"></span>   The frame ID is followed by a size descriptor containing the size of
<span class="anchor" id="line-340"></span>   the data in the final frame, after encryption, compression and
<span class="anchor" id="line-341"></span>   unsynchronisation. The size is excluding the frame header ('total
<span class="anchor" id="line-342"></span>   frame size' - 10 bytes) and stored as a 32 bit synchsafe integer.
<span class="anchor" id="line-343"></span>
<span class="anchor" id="line-344"></span>   In the frame header the size descriptor is followed by two flag
<span class="anchor" id="line-345"></span>   bytes. These flags are described in section 4.1.
<span class="anchor" id="line-346"></span>
<span class="anchor" id="line-347"></span>   There is no fixed order of the frames' appearance in the tag,
<span class="anchor" id="line-348"></span>   although it is desired that the frames are arranged in order of
<span class="anchor" id="line-349"></span>   significance concerning the recognition of the file. An example of
<span class="anchor" id="line-350"></span>   such order: UFID, TIT2, MCDI, TRCK ...
<span class="anchor" id="line-351"></span>
<span class="anchor" id="line-352"></span>   A tag MUST contain at least one frame. A frame must be at least 1
<span class="anchor" id="line-353"></span>   byte big, excluding the header.
<span class="anchor" id="line-354"></span>
<span class="anchor" id="line-355"></span>   If nothing else is said, strings, including numeric strings and URLs
<span class="anchor" id="line-356"></span>   [URL], are represented as ISO-8859-1 [ISO-8859-1] characters in the
<span class="anchor" id="line-357"></span>   range $20 - $FF. Such strings are represented in frame descriptions
<span class="anchor" id="line-358"></span>   as &lt;text string&gt;, or &lt;full text string&gt; if newlines are allowed. If
<span class="anchor" id="line-359"></span>   nothing else is said newline character is forbidden. In ISO-8859-1 a
<span class="anchor" id="line-360"></span>   newline is represented, when allowed, with $0A only.
<span class="anchor" id="line-361"></span>
<span class="anchor" id="line-362"></span>   Frames that allow different types of text encoding contains a text
<span class="anchor" id="line-363"></span>   encoding description byte. Possible encodings:
<span class="anchor" id="line-364"></span>
<span class="anchor" id="line-365"></span>     $00   ISO-8859-1 [ISO-8859-1]. Terminated with $00.
<span class="anchor" id="line-366"></span>     $01   UTF-16 [UTF-16] encoded Unicode [UNICODE] with BOM. All
<span class="anchor" id="line-367"></span>           strings in the same frame SHALL have the same byteorder.
<span class="anchor" id="line-368"></span>           Terminated with $00 00.
<span class="anchor" id="line-369"></span>     $02   UTF-16BE [UTF-16] encoded Unicode [UNICODE] without BOM.
<span class="anchor" id="line-370"></span>           Terminated with $00 00.
<span class="anchor" id="line-371"></span>     $03   UTF-8 [UTF-8] encoded Unicode [UNICODE]. Terminated with $00.
<span class="anchor" id="line-372"></span>
<span class="anchor" id="line-373"></span>   Strings dependent on encoding are represented in frame descriptions
<span class="anchor" id="line-374"></span>   as &lt;text string according to encoding&gt;, or &lt;full text string
<span class="anchor" id="line-375"></span>   according to encoding&gt; if newlines are allowed. Any empty strings of
<span class="anchor" id="line-376"></span>   type $01 which are NULL-terminated may have the Unicode BOM followed
<span class="anchor" id="line-377"></span>   by a Unicode NULL ($FF FE 00 00 or $FE FF 00 00).
<span class="anchor" id="line-378"></span>
<span class="anchor" id="line-379"></span>   The timestamp fields are based on a subset of ISO 8601. When being as
<span class="anchor" id="line-380"></span>   precise as possible the format of a time string is
<span class="anchor" id="line-381"></span>   yyyy-MM-ddTHH:mm:ss (year, "-", month, "-", day, "T", hour (out of
<span class="anchor" id="line-382"></span>   24), ":", minutes, ":", seconds), but the precision may be reduced by
<span class="anchor" id="line-383"></span>   removing as many time indicators as wanted. Hence valid timestamps
<span class="anchor" id="line-384"></span>   are
<span class="anchor" id="line-385"></span>   yyyy, yyyy-MM, yyyy-MM-dd, yyyy-MM-ddTHH, yyyy-MM-ddTHH:mm and
<span class="anchor" id="line-386"></span>   yyyy-MM-ddTHH:mm:ss. All time stamps are UTC. For durations, use
<span class="anchor" id="line-387"></span>   the slash character as described in 8601, and for multiple non-
<span class="anchor" id="line-388"></span>   contiguous dates, use multiple strings, if allowed by the frame
<span class="anchor" id="line-389"></span>   definition.
<span class="anchor" id="line-390"></span>
<span class="anchor" id="line-391"></span>   The three byte language field, present in several frames, is used to
<span class="anchor" id="line-392"></span>   describe the language of the frame's content, according to ISO-639-2
<span class="anchor" id="line-393"></span>   [ISO-639-2]. The language should be represented in lower case. If the
<span class="anchor" id="line-394"></span>   language is not known the string "XXX" should be used.
<span class="anchor" id="line-395"></span>
<span class="anchor" id="line-396"></span>   All URLs [URL] MAY be relative, e.g. "picture.png", "../doc.txt".
<span class="anchor" id="line-397"></span>
<span class="anchor" id="line-398"></span>   If a frame is longer than it should be, e.g. having more fields than
<span class="anchor" id="line-399"></span>   specified in this document, that indicates that additions to the
<span class="anchor" id="line-400"></span>   frame have been made in a later version of the ID3v2 standard. This
<span class="anchor" id="line-401"></span>   is reflected by the revision number in the header of the tag.
<span class="anchor" id="line-402"></span>
<span class="anchor" id="line-403"></span>
<span class="anchor" id="line-404"></span>4.1.   Frame header flags
<span class="anchor" id="line-405"></span>
<span class="anchor" id="line-406"></span>   In the frame header the size descriptor is followed by two flag
<span class="anchor" id="line-407"></span>   bytes. All unused flags MUST be cleared. The first byte is for
<span class="anchor" id="line-408"></span>   'status messages' and the second byte is a format description. If an
<span class="anchor" id="line-409"></span>   unknown flag is set in the first byte the frame MUST NOT be changed
<span class="anchor" id="line-410"></span>   without that bit cleared. If an unknown flag is set in the second
<span class="anchor" id="line-411"></span>   byte the frame is likely to not be readable. Some flags in the second
<span class="anchor" id="line-412"></span>   byte indicates that extra information is added to the header. These
<span class="anchor" id="line-413"></span>   fields of extra information is ordered as the flags that indicates
<span class="anchor" id="line-414"></span>   them. The flags field is defined as follows (l and o left out because
<span class="anchor" id="line-415"></span>   ther resemblence to one and zero):
<span class="anchor" id="line-416"></span>
<span class="anchor" id="line-417"></span>     %0abc0000 %0h00kmnp
<span class="anchor" id="line-418"></span>
<span class="anchor" id="line-419"></span>   Some frame format flags indicate that additional information fields
<span class="anchor" id="line-420"></span>   are added to the frame. This information is added after the frame
<span class="anchor" id="line-421"></span>   header and before the frame data in the same order as the flags that
<span class="anchor" id="line-422"></span>   indicates them. I.e. the four bytes of decompressed size will precede
<span class="anchor" id="line-423"></span>   the encryption method byte. These additions affects the 'frame size'
<span class="anchor" id="line-424"></span>   field, but are not subject to encryption or compression.
<span class="anchor" id="line-425"></span>   
<span class="anchor" id="line-426"></span>   The default status flags setting for a frame is, unless stated
<span class="anchor" id="line-427"></span>   otherwise, 'preserved if tag is altered' and 'preserved if file is
<span class="anchor" id="line-428"></span>   altered', i.e. %00000000.
<span class="anchor" id="line-429"></span>
<span class="anchor" id="line-430"></span>
<span class="anchor" id="line-431"></span>4.1.1. Frame status flags
<span class="anchor" id="line-432"></span>
<span class="anchor" id="line-433"></span>   a - Tag alter preservation
<span class="anchor" id="line-434"></span>
<span class="anchor" id="line-435"></span>     This flag tells the tag parser what to do with this frame if it is
<span class="anchor" id="line-436"></span>     unknown and the tag is altered in any way. This applies to all
<span class="anchor" id="line-437"></span>     kinds of alterations, including adding more padding and reordering
<span class="anchor" id="line-438"></span>     the frames.
<span class="anchor" id="line-439"></span>
<span class="anchor" id="line-440"></span>     0     Frame should be preserved.
<span class="anchor" id="line-441"></span>     1     Frame should be discarded.
<span class="anchor" id="line-442"></span>
<span class="anchor" id="line-443"></span>
<span class="anchor" id="line-444"></span>   b - File alter preservation
<span class="anchor" id="line-445"></span>
<span class="anchor" id="line-446"></span>     This flag tells the tag parser what to do with this frame if it is
<span class="anchor" id="line-447"></span>     unknown and the file, excluding the tag, is altered. This does not
<span class="anchor" id="line-448"></span>     apply when the audio is completely replaced with other audio data.
<span class="anchor" id="line-449"></span>
<span class="anchor" id="line-450"></span>     0     Frame should be preserved.
<span class="anchor" id="line-451"></span>     1     Frame should be discarded.
<span class="anchor" id="line-452"></span>
<span class="anchor" id="line-453"></span>
<span class="anchor" id="line-454"></span>   c - Read only
<span class="anchor" id="line-455"></span>
<span class="anchor" id="line-456"></span>      This flag, if set, tells the software that the contents of this
<span class="anchor" id="line-457"></span>      frame are intended to be read only. Changing the contents might
<span class="anchor" id="line-458"></span>      break something, e.g. a signature. If the contents are changed,
<span class="anchor" id="line-459"></span>      without knowledge of why the frame was flagged read only and
<span class="anchor" id="line-460"></span>      without taking the proper means to compensate, e.g. recalculating
<span class="anchor" id="line-461"></span>      the signature, the bit MUST be cleared.
<span class="anchor" id="line-462"></span>
<span class="anchor" id="line-463"></span>
<span class="anchor" id="line-464"></span>4.1.2. Frame format flags
<span class="anchor" id="line-465"></span>
<span class="anchor" id="line-466"></span>   h - Grouping identity
<span class="anchor" id="line-467"></span>
<span class="anchor" id="line-468"></span>      This flag indicates whether or not this frame belongs in a group
<span class="anchor" id="line-469"></span>      with other frames. If set, a group identifier byte is added to the
<span class="anchor" id="line-470"></span>      frame. Every frame with the same group identifier belongs to the
<span class="anchor" id="line-471"></span>      same group.
<span class="anchor" id="line-472"></span>
<span class="anchor" id="line-473"></span>      0     Frame does not contain group information
<span class="anchor" id="line-474"></span>      1     Frame contains group information
<span class="anchor" id="line-475"></span>
<span class="anchor" id="line-476"></span>
<span class="anchor" id="line-477"></span>   k - Compression
<span class="anchor" id="line-478"></span>
<span class="anchor" id="line-479"></span>      This flag indicates whether or not the frame is compressed.
<span class="anchor" id="line-480"></span>      A 'Data Length Indicator' byte MUST be included in the frame.
<span class="anchor" id="line-481"></span>
<span class="anchor" id="line-482"></span>      0     Frame is not compressed.
<span class="anchor" id="line-483"></span>      1     Frame is compressed using zlib [zlib] deflate method.
<span class="anchor" id="line-484"></span>            If set, this requires the 'Data Length Indicator' bit
<span class="anchor" id="line-485"></span>            to be set as well.
<span class="anchor" id="line-486"></span>
<span class="anchor" id="line-487"></span>
<span class="anchor" id="line-488"></span>   m - Encryption
<span class="anchor" id="line-489"></span>   
<span class="anchor" id="line-490"></span>      This flag indicates whether or not the frame is encrypted. If set,
<span class="anchor" id="line-491"></span>      one byte indicating with which method it was encrypted will be
<span class="anchor" id="line-492"></span>      added to the frame. See description of the ENCR frame for more
<span class="anchor" id="line-493"></span>      information about encryption method registration. Encryption
<span class="anchor" id="line-494"></span>      should be done after compression. Whether or not setting this flag
<span class="anchor" id="line-495"></span>      requires the presence of a 'Data Length Indicator' depends on the
<span class="anchor" id="line-496"></span>      specific algorithm used.
<span class="anchor" id="line-497"></span>
<span class="anchor" id="line-498"></span>      0     Frame is not encrypted.
<span class="anchor" id="line-499"></span>      1     Frame is encrypted.
<span class="anchor" id="line-500"></span>
<span class="anchor" id="line-501"></span>   n - Unsynchronisation
<span class="anchor" id="line-502"></span>
<span class="anchor" id="line-503"></span>      This flag indicates whether or not unsynchronisation was applied
<span class="anchor" id="line-504"></span>      to this frame. See section 6 for details on unsynchronisation.
<span class="anchor" id="line-505"></span>      If this flag is set all data from the end of this header to the
<span class="anchor" id="line-506"></span>      end of this frame has been unsynchronised. Although desirable, the
<span class="anchor" id="line-507"></span>      presence of a 'Data Length Indicator' is not made mandatory by
<span class="anchor" id="line-508"></span>      unsynchronisation.
<span class="anchor" id="line-509"></span>
<span class="anchor" id="line-510"></span>      0     Frame has not been unsynchronised.
<span class="anchor" id="line-511"></span>      1     Frame has been unsyrchronised.
<span class="anchor" id="line-512"></span>
<span class="anchor" id="line-513"></span>   p - Data length indicator
<span class="anchor" id="line-514"></span>
<span class="anchor" id="line-515"></span>      This flag indicates that a data length indicator has been added to
<span class="anchor" id="line-516"></span>      the frame. The data length indicator is the value one would write
<span class="anchor" id="line-517"></span>      as the 'Frame length' if all of the frame format flags were
<span class="anchor" id="line-518"></span>      zeroed, represented as a 32 bit synchsafe integer.
<span class="anchor" id="line-519"></span>
<span class="anchor" id="line-520"></span>      0      There is no Data Length Indicator.
<span class="anchor" id="line-521"></span>      1      A data length Indicator has been added to the frame.
<span class="anchor" id="line-522"></span>
<span class="anchor" id="line-523"></span>
<span class="anchor" id="line-524"></span>5.   Tag location
<span class="anchor" id="line-525"></span>
<span class="anchor" id="line-526"></span>   The default location of an ID3v2 tag is prepended to the audio so
<span class="anchor" id="line-527"></span>   that players can benefit from the information when the data is
<span class="anchor" id="line-528"></span>   streamed. It is however possible to append the tag, or make a
<span class="anchor" id="line-529"></span>   prepend/append combination. When deciding upon where an unembedded
<span class="anchor" id="line-530"></span>   tag should be located, the following order of preference SHOULD be
<span class="anchor" id="line-531"></span>   considered.
<span class="anchor" id="line-532"></span>   
<span class="anchor" id="line-533"></span>     1. Prepend the tag.
<span class="anchor" id="line-534"></span>
<span class="anchor" id="line-535"></span>     2. Prepend a tag with all vital information and add a second tag at 
<span class="anchor" id="line-536"></span>        the end of the file, before tags from other tagging systems. The
<span class="anchor" id="line-537"></span>        first tag is required to have a SEEK frame.
<span class="anchor" id="line-538"></span>      
<span class="anchor" id="line-539"></span>     3. Add a tag at the end of the file, before tags from other tagging
<span class="anchor" id="line-540"></span>        systems.
<span class="anchor" id="line-541"></span>      
<span class="anchor" id="line-542"></span>   In case 2 and 3 the tag can simply be appended if no other known tags
<span class="anchor" id="line-543"></span>   are present. The suggested method to find ID3v2 tags are:
<span class="anchor" id="line-544"></span>   
<span class="anchor" id="line-545"></span>     1. Look for a prepended tag using the pattern found in section 3.1.
<span class="anchor" id="line-546"></span>
<span class="anchor" id="line-547"></span>     2. If a SEEK frame was found, use its values to guide further
<span class="anchor" id="line-548"></span>        searching.
<span class="anchor" id="line-549"></span>
<span class="anchor" id="line-550"></span>     3. Look for a tag footer, scanning from the back of the file.
<span class="anchor" id="line-551"></span>
<span class="anchor" id="line-552"></span>   For every new tag that is found, the old tag should be discarded
<span class="anchor" id="line-553"></span>   unless the update flag in the extended header (section 3.2) is set.
<span class="anchor" id="line-554"></span>   
<span class="anchor" id="line-555"></span>
<span class="anchor" id="line-556"></span>6.   Unsynchronisation
<span class="anchor" id="line-557"></span>
<span class="anchor" id="line-558"></span>   The only purpose of unsynchronisation is to make the ID3v2 tag as
<span class="anchor" id="line-559"></span>   compatible as possible with existing software and hardware. There is
<span class="anchor" id="line-560"></span>   no use in 'unsynchronising' tags if the file is only to be processed
<span class="anchor" id="line-561"></span>   only by ID3v2 aware software and hardware. Unsynchronisation is only
<span class="anchor" id="line-562"></span>   useful with tags in MPEG 1/2 layer I, II and III, MPEG 2.5 and AAC
<span class="anchor" id="line-563"></span>   files.
<span class="anchor" id="line-564"></span>
<span class="anchor" id="line-565"></span>
<span class="anchor" id="line-566"></span>6.1.   The unsynchronisation scheme
<span class="anchor" id="line-567"></span>
<span class="anchor" id="line-568"></span>   Whenever a false synchronisation is found within the tag, one zeroed
<span class="anchor" id="line-569"></span>   byte is inserted after the first false synchronisation byte. The
<span class="anchor" id="line-570"></span>   format of synchronisations that should be altered by ID3 encoders is
<span class="anchor" id="line-571"></span>   as follows:
<span class="anchor" id="line-572"></span>
<span class="anchor" id="line-573"></span>         %11111111 111xxxxx
<span class="anchor" id="line-574"></span>
<span class="anchor" id="line-575"></span>   and should be replaced with:
<span class="anchor" id="line-576"></span>
<span class="anchor" id="line-577"></span>         %11111111 00000000 111xxxxx
<span class="anchor" id="line-578"></span>
<span class="anchor" id="line-579"></span>   This has the side effect that all $FF 00 combinations have to be
<span class="anchor" id="line-580"></span>   altered, so they will not be affected by the decoding process.
<span class="anchor" id="line-581"></span>   Therefore all the $FF 00 combinations have to be replaced with the
<span class="anchor" id="line-582"></span>   $FF 00 00 combination during the unsynchronisation.
<span class="anchor" id="line-583"></span>
<span class="anchor" id="line-584"></span>   To indicate usage of the unsynchronisation, the unsynchronisation
<span class="anchor" id="line-585"></span>   flag in the frame header should be set. This bit MUST be set if the
<span class="anchor" id="line-586"></span>   frame was altered by the unsynchronisation and SHOULD NOT be set if
<span class="anchor" id="line-587"></span>   unaltered. If all frames in the tag are unsynchronised the
<span class="anchor" id="line-588"></span>   unsynchronisation flag in the tag header SHOULD be set. It MUST NOT
<span class="anchor" id="line-589"></span>   be set if the tag has a frame which is not unsynchronised.
<span class="anchor" id="line-590"></span>
<span class="anchor" id="line-591"></span>   Assume the first byte of the audio to be $FF. The special case when
<span class="anchor" id="line-592"></span>   the last byte of the last frame is $FF and no padding nor footer is
<span class="anchor" id="line-593"></span>   used will then introduce a false synchronisation. This can be solved
<span class="anchor" id="line-594"></span>   by adding a footer, adding padding or unsynchronising the frame and
<span class="anchor" id="line-595"></span>   add $00 to the end of the frame data, thus adding more byte to the
<span class="anchor" id="line-596"></span>   frame size than a normal unsynchronisation would. Although not
<span class="anchor" id="line-597"></span>   preferred, it is allowed to apply the last method on all frames
<span class="anchor" id="line-598"></span>   ending with $FF.
<span class="anchor" id="line-599"></span>
<span class="anchor" id="line-600"></span>   It is preferred that the tag is either completely unsynchronised or
<span class="anchor" id="line-601"></span>   not unsynchronised at all. A completely unsynchronised tag has no 
<span class="anchor" id="line-602"></span>   false synchonisations in it, as defined above, and does not end with
<span class="anchor" id="line-603"></span>   $FF. A completely non-unsynchronised tag contains no unsynchronised
<span class="anchor" id="line-604"></span>   frames, and thus the unsynchronisation flag in the header is cleared.
<span class="anchor" id="line-605"></span>
<span class="anchor" id="line-606"></span>   Do bear in mind, that if compression or encryption is used, the
<span class="anchor" id="line-607"></span>   unsynchronisation scheme MUST be applied afterwards. When decoding an
<span class="anchor" id="line-608"></span>   unsynchronised frame, the unsynchronisation scheme MUST be reversed
<span class="anchor" id="line-609"></span>   first, encryption and decompression afterwards.
<span class="anchor" id="line-610"></span>
<span class="anchor" id="line-611"></span>
<span class="anchor" id="line-612"></span>6.2.   Synchsafe integers
<span class="anchor" id="line-613"></span>
<span class="anchor" id="line-614"></span>   In some parts of the tag it is inconvenient to use the
<span class="anchor" id="line-615"></span>   unsychronisation scheme because the size of unsynchronised data is
<span class="anchor" id="line-616"></span>   not known in advance, which is particularly problematic with size
<span class="anchor" id="line-617"></span>   descriptors. The solution in ID3v2 is to use synchsafe integers, in
<span class="anchor" id="line-618"></span>   which there can never be any false synchs. Synchsafe integers are
<span class="anchor" id="line-619"></span>   integers that keep its highest bit (bit 7) zeroed, making seven bits
<span class="anchor" id="line-620"></span>   out of eight available. Thus a 32 bit synchsafe integer can store 28
<span class="anchor" id="line-621"></span>   bits of information.
<span class="anchor" id="line-622"></span>   
<span class="anchor" id="line-623"></span>   Example:
<span class="anchor" id="line-624"></span>   
<span class="anchor" id="line-625"></span>     255 (%11111111) encoded as a 16 bit synchsafe integer is 383
<span class="anchor" id="line-626"></span>     (%00000001 01111111).
<span class="anchor" id="line-627"></span>
<span class="anchor" id="line-628"></span>
<span class="anchor" id="line-629"></span>7.   Copyright
<span class="anchor" id="line-630"></span>
<span class="anchor" id="line-631"></span>   Copyright (C) Martin Nilsson 2000. All Rights Reserved.
<span class="anchor" id="line-632"></span>
<span class="anchor" id="line-633"></span>   This document and translations of it may be copied and furnished to
<span class="anchor" id="line-634"></span>   others, and derivative works that comment on or otherwise explain it
<span class="anchor" id="line-635"></span>   or assist in its implementation may be prepared, copied, published
<span class="anchor" id="line-636"></span>   and distributed, in whole or in part, without restriction of any
<span class="anchor" id="line-637"></span>   kind, provided that a reference to this document is included on all
<span class="anchor" id="line-638"></span>   such copies and derivative works. However, this document itself may
<span class="anchor" id="line-639"></span>   not be modified in any way and reissued as the original document.
<span class="anchor" id="line-640"></span>
<span class="anchor" id="line-641"></span>   The limited permissions granted above are perpetual and will not be
<span class="anchor" id="line-642"></span>   revoked.
<span class="anchor" id="line-643"></span>
<span class="anchor" id="line-644"></span>   This document and the information contained herein is provided on an
<span class="anchor" id="line-645"></span>   'AS IS' basis and THE AUTHORS DISCLAIMS ALL WARRANTIES, EXPRESS OR
<span class="anchor" id="line-646"></span>   IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF
<span class="anchor" id="line-647"></span>   THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
<span class="anchor" id="line-648"></span>   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.
<span class="anchor" id="line-649"></span>
<span class="anchor" id="line-650"></span>
<span class="anchor" id="line-651"></span>8.   References
<span class="anchor" id="line-652"></span>
<span class="anchor" id="line-653"></span>   [ID3v2] Martin Nilsson, 'ID3v2 informal standard'.
<span class="anchor" id="line-654"></span>
<span class="anchor" id="line-655"></span>      &lt;url:http://www.id3.org/id3v2.3.0.txt&gt;
<span class="anchor" id="line-656"></span>
<span class="anchor" id="line-657"></span>   [ISO-639-2] ISO/FDIS 639-2.
<span class="anchor" id="line-658"></span>   'Codes for the representation of names of languages, Part 2: Alpha-3
<span class="anchor" id="line-659"></span>   code.' Technical committee / subcommittee: TC 37 / SC 2
<span class="anchor" id="line-660"></span>
<span class="anchor" id="line-661"></span>   [ISO-3309] ISO 3309
<span class="anchor" id="line-662"></span>   'Information Processing Systems--Data Communication High-Level Data
<span class="anchor" id="line-663"></span>   Link Control Procedure--Frame Structure', IS 3309, October 1984, 3rd
<span class="anchor" id="line-664"></span>   Edition.
<span class="anchor" id="line-665"></span>
<span class="anchor" id="line-666"></span>   [ISO-8859-1] ISO/IEC DIS 8859-1.
<span class="anchor" id="line-667"></span>   '8-bit single-byte coded graphic character sets, Part 1: Latin
<span class="anchor" id="line-668"></span>   alphabet No. 1.' Technical committee / subcommittee: JTC 1 / SC 2
<span class="anchor" id="line-669"></span>
<span class="anchor" id="line-670"></span>   [JFIF] 'JPEG File Interchange Format, version 1.02'
<span class="anchor" id="line-671"></span>
<span class="anchor" id="line-672"></span>      &lt;url:http://www.w3.org/Graphics/JPEG/jfif.txt&gt;
<span class="anchor" id="line-673"></span>
<span class="anchor" id="line-674"></span>   [KEYWORDS] S. Bradner, 'Key words for use in RFCs to Indicate
<span class="anchor" id="line-675"></span>   Requirement Levels', RFC 2119, March 1997.
<span class="anchor" id="line-676"></span>
<span class="anchor" id="line-677"></span>      &lt;url:ftp://ftp.isi.edu/in-notes/rfc2119.txt&gt;
<span class="anchor" id="line-678"></span>
<span class="anchor" id="line-679"></span>   [MPEG] ISO/IEC 11172-3:1993.
<span class="anchor" id="line-680"></span>   'Coding of moving pictures and associated audio for digital storage
<span class="anchor" id="line-681"></span>   media at up to about 1,5 Mbit/s, Part 3: Audio.'
<span class="anchor" id="line-682"></span>   Technical committee / subcommittee: JTC 1 / SC 29
<span class="anchor" id="line-683"></span>    and
<span class="anchor" id="line-684"></span>   ISO/IEC 13818-3:1995
<span class="anchor" id="line-685"></span>   'Generic coding of moving pictures and associated audio information,
<span class="anchor" id="line-686"></span>   Part 3: Audio.'
<span class="anchor" id="line-687"></span>   Technical committee / subcommittee: JTC 1 / SC 29
<span class="anchor" id="line-688"></span>    and
<span class="anchor" id="line-689"></span>   ISO/IEC DIS 13818-3
<span class="anchor" id="line-690"></span>   'Generic coding of moving pictures and associated audio information,
<span class="anchor" id="line-691"></span>   Part 3: Audio (Revision of ISO/IEC 13818-3:1995)'
<span class="anchor" id="line-692"></span>
<span class="anchor" id="line-693"></span>   [PNG] 'Portable Network Graphics, version 1.0'
<span class="anchor" id="line-694"></span>
<span class="anchor" id="line-695"></span>      &lt;url:http://www.w3.org/TR/REC-png-multi.html&gt;
<span class="anchor" id="line-696"></span>
<span class="anchor" id="line-697"></span>   [UNICODE] The Unicode Consortium,
<span class="anchor" id="line-698"></span>   'The Unicode Standard Version 3.0', ISBN 0-201-61633-5.
<span class="anchor" id="line-699"></span>
<span class="anchor" id="line-700"></span>   &lt;url:http://www.unicode.org/unicode/standard/versions/Unicode3.0.htm&gt;
<span class="anchor" id="line-701"></span>
<span class="anchor" id="line-702"></span>   [URL] T. Berners-Lee, L. Masinter &amp; M. McCahill, 'Uniform Resource
<span class="anchor" id="line-703"></span>   Locators (URL)', RFC 1738, December 1994.
<span class="anchor" id="line-704"></span>
<span class="anchor" id="line-705"></span>      &lt;url:ftp://ftp.isi.edu/in-notes/rfc1738.txt&gt;
<span class="anchor" id="line-706"></span>
<span class="anchor" id="line-707"></span>   [UTF-8] F. Yergeau, 'UTF-8, a transformation format of ISO 10646',
<span class="anchor" id="line-708"></span>   RFC 2279, January 1998.
<span class="anchor" id="line-709"></span>   
<span class="anchor" id="line-710"></span>      &lt;url:ftp://ftp.isi.edu/in-notes/rfc2279.txt&gt;
<span class="anchor" id="line-711"></span>
<span class="anchor" id="line-712"></span>   [UTF-16] F. Yergeau, 'UTF-16, an encoding of ISO 10646', RFC 2781,
<span class="anchor" id="line-713"></span>   February 2000.
<span class="anchor" id="line-714"></span>   
<span class="anchor" id="line-715"></span>      &lt;url:ftp://ftp.isi.edu/in-notes/rfc2781.txt&gt;
<span class="anchor" id="line-716"></span>   
<span class="anchor" id="line-717"></span>   [ZLIB] P. Deutsch, Aladdin Enterprises &amp; J-L. Gailly, 'ZLIB
<span class="anchor" id="line-718"></span>   Compressed Data Format Specification version 3.3', RFC 1950,
<span class="anchor" id="line-719"></span>   May 1996.
<span class="anchor" id="line-720"></span>
<span class="anchor" id="line-721"></span>      &lt;url:ftp://ftp.isi.edu/in-notes/rfc1950.txt&gt;
<span class="anchor" id="line-722"></span>
<span class="anchor" id="line-723"></span>
<span class="anchor" id="line-724"></span>9.   Author's Address
<span class="anchor" id="line-725"></span>
<span class="anchor" id="line-726"></span>   Written by
<span class="anchor" id="line-727"></span>
<span class="anchor" id="line-728"></span>     Martin Nilsson
<span class="anchor" id="line-729"></span>     Rydsv�gen 246 C. 30
<span class="anchor" id="line-730"></span>     SE-584 34 Link�ping
<span class="anchor" id="line-731"></span>     Sweden
<span class="anchor" id="line-732"></span>
<span class="anchor" id="line-733"></span>     Email: nilsson at id3.org
<span class="anchor" id="line-734"></span></pre><span class="anchor" id="line-735"></span><span class="anchor" id="bottom"></span></div><div id="pagebottom"></div>
<p id="pageinfo" class="info" lang="en" dir="ltr">id3v2.4.0-structure  (last edited 2006-12-18 06:23:19 by <span title="DanONeill"><a generated="True" href="/DanONeill" title="DanONeill">DanONeill</a></span>)</p>

<div id="pagebottom"></div>
</div>

<center><a href="/Copyright">Copyright</a> &copy; 1998-2009 by their respective owners</center>
</body>
</html>

